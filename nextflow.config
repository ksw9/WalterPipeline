profiles {

    standard {

        docker {

            enabled             = true

            envWhitelist        = "SLURM_CPUS_ON_NODE"

            runOptions          = '-v "$TMPDIR":"$TMPDIR"' // For compatibility with the parallel command called by Tb-Profiler

        }

    }

    docker {

        docker {

            enabled             = true

            envWhitelist        = "SLURM_CPUS_ON_NODE"

            runOptions          = '-v "$TMPDIR":"$TMPDIR"' // For compatibility with the parallel command called by Tb-Profiler

        }
    
    }

    podman {

        podman {

            enabled             = true

            envWhitelist        = "SLURM_CPUS_ON_NODE"

            runOptions          = '-v "$TMPDIR":"$TMPDIR"' // For compatibility with the parallel command called by Tb-Profiler

        }
    
    }

    singularity {

        singularity {

            enabled             = true

            envWhitelist        = "SLURM_CPUS_ON_NODE"

            runOptions          = '-B "$TMPDIR"' // For compatibility with the parallel command called by Tb-Profiler

            autoMounts          = true

        }
    
    }

}

process {

    executor                    = "slurm"

    clusterOptions              = "-A ucgd-rw --partition ucgd-rw -N 1"
        
    errorStrategy               = "finish"

    withLabel: trimgalore {

    	container               = "ksw9/mtb-call:trimgalore"

    }

    withLabel: kraken2 {

        container               = "ksw9/mtb-call:kraken2"

    }
    
    withLabel: mapping {

        container               = "ksw9/mtb-call:mapping"

    }
    
    withLabel: amr {

        container               = "ksw9/mtb-call:amr"

    }
    
    withLabel: tb_profiler {
    
    	container               = "ksw9/mtb-call:tbprofiler"

        // errorStrategy set to "retry" to deal with random failures of TB-Profiler

        errorStrategy           = "retry"
        
        maxRetries              = 10

    }

    withLabel: variantcalling {

        container               = "ksw9/mtb-call:variantcalling"

    }

    withLabel: makesummary {

        container               = "ksw9/mtb-call:trimgalore"

    }

}

params {
    
    // Main files/directories
    // N.B. All paths are relative to resources_dir

    resources_dir               = "/uufs/chpc.utah.edu/common/home/walter-group1/tb/mtb-call2/resources"

    reads_list                  = "input/vitoria.tsv"

    kraken_database_path        = "kraken_db/standard"

    reference_fasta_path        = "refs/H37Rv.fasta"

    reference_fasta_index_path  = "refs/H37Rv.fasta.fai"

    bwa_index_path              = "bwa_index"

    bowtie_index_path           = "bowtie2_index"

    bowtie_index_prefix         = "H37Rv"

    gatk_dictionary_path        = "gatk_dictionary/H37Rv.dict"

    bed_path                    = "bed/H37Rv_ppe.bed.gz"

    bed_index_path              = "bed/H37Rv_ppe.bed.gz.tbi"

    vcf_header                  = "bed/ppe_hdr.txt"

    snpeff                      = "snpEff/snpEff.jar"

    snpeff_db                   = "Mycobacterium_tuberculosis_h37rv"

    snpeff_datapath             = "snpEff/data"

    snpeff_config		        = "snpEff/snpEff.config"

    // Main variables

    mapper                      = "bwa"

    run_lofreq                  = true

    seq_platform                = "illumina"

    library                     = "library1"

    depth_threshold             = 5

    qual_threshold              = 20

    ploidy                      = 1

    nextseq                     = false

    nextseq_qual_threshold      = 20
    
    variants_only               = true

}
